
/*
**Python Pandas-Weather Dataset**

 Skills/Functions used: 
* head() - It shows the first N rows in the data (by default, N=5).
* shape - It shows the total no. of rows and no. of columns of the dataframe
* index - This attribute provides the index of the dataframe
* columns - It shows the name of each column
* dtypes - It shows the data-type of each column
* unique() - In a column, it shows all the unique values. It can be applied on a single column only, not on the whole dataframe.
* nunique() - It shows the total no. of unique values in each column. It can be applied on a single column as well as on the whole dataframe.
* count - It shows the total no. of non-null values in each column. It can be applied on a single column as well as on the whole dataframe.
* value_counts - In a column, it shows all the unique values with their count. It can be applied on a single column only.
* info() - Provides basic information about the dataframe.

*/

***Q. 1)  Find all the unique 'Wind Speed' values in the data.***
__Answer__    `data['Wind Speed_km/h'].unique()`


***Q. 2) Find the number of times when the 'Weather is exactly Clear'.***
__Answer__
<sub>by Filtering()</sub>
`data[data.Weather =='Clear']`
<sub>by Groupby()</sub>
`data.groupby('Weather').get_group('Clear')`



***Q. 3) Find the number of times when the 'Wind Speed was exactly 4 km/h'.***
__Answer__    `data[data['Weather Speed_km/h']==4]`


***Q. 4) Find out all the Null Values in the data.***
__Answer__    `data.isnull()`


***Q. 5) Rename the column name 'Weather' of the dataframe to 'Weather Condition'.***
__Answer__    `data.rename(columns = {'Weather' : 'Weather Condition'}, inplace = True)`


***Q. 6) What is the mean 'Visibility' ?***
__Answer__    `data.Visibility_km.mean()`


***Q. 7) What is the Standard Deviation of 'Pressure'  in this data?***
__Answer__    `data.Press_kPa.std()`


***Q. 8) What is the Variance of 'Relative Humidity' in this data ?***
__Answer__ `data[Real Hum_%].var()`


***Q. 9) Find all instances when 'Snow' was recorded.***
__Answer__ 
<sub> by value_counts</sub>
`data['Weather Condition'].value_counts()`
<sub>by Filtering</sub>
`data[data['Weather Condition'] == 'Snow']
<sub>by str.contains</sub>
data[data['Weather Condition'].str.contains('Snow')]`


***Q. 10) Find all instances when 'Wind Speed is above 24' and 'Visibility is 25'.***
__Answer__  `data[(data['Weather Speed_km/h'] > 24) & (data['Visibility_km'] == 25)]`


***Q. 11) What is the Mean value of each column against each 'Weather Condition ?***
__Answer__  `data.groupby('Weather condition').mean()`


***Q. 12) What is the Minimum & Maximum value of each column against each 'Weather Condition ?***
__Answer__  `data.groupby('Weather condition').min()`
                    `data.groupby('Weather condition').max()`


***Q. 13) Show all the Records where Weather Condition is Fog.***
__Answer__  `data[data['Weather condition'] == 'Fog']


***Q. 14) Find all instances when 'Weather is Clear' or 'Visibility is above 40'.***
__Answer__ `data[(data['Weather condition'] == 'Clear') | (data['Visibility_km'] > 40)]`


***Q. 15) Find all instances when :
          A. 'Weather is Clear' and 'Relative Humidity is greater than 50' or
          B. 'Visibility is above 40'***
__Answer__ `data[(data['Weather cindition']=='Clear') & (data['Real Hum_%'] > 50) | (data['Visibility_km'] > 40)]
